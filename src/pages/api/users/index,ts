// src/pages/api/users/index.ts

import { NextApiRequest, NextApiResponse } from "next";
import { prisma } from "@/lib/prisma";
import { z } from "zod";

const userSchema = z.object({
  name: z.string().min(1),
  email: z.string().email(),
});

export default async function handler(req: NextApiRequest, res: NextApiResponse) {
  try {
    if (req.method === "GET") {
      const users = await prisma.user.findMany();
      return res.status(200).json(users);
    }

    if (req.method === "POST") {
      const parsed = userSchema.safeParse(req.body);
      if (!parsed.success) {
        return res.status(400).json({ error: "Invalid user data", details: parsed.error });
      }

      const user = await prisma.user.create({ data: parsed.data });
      return res.status(201).json(user);
    }

    return res.status(405).json({ error: "Method Not Allowed" });
  } catch (error) {
    console.error("User API error:", error);
    return res.status(500).json({ error: "Internal Server Error" });
  }
}
